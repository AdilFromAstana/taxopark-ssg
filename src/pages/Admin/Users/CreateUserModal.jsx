/* eslint-disable react/prop-types */
import { Modal, Form, Input, Button, Row, Col, message, Select } from "antd";
import axios from "axios";
import { useState } from "react";

const API_URL = import.meta.env.VITE_API_URL;

const CreateUserModal = ({ open, onClose, queryClient, queryData }) => {
  const [form] = Form.useForm();
  const [loading, setLoading] = useState(false);

  const handleSubmit = async (values) => {
    try {
      setLoading(true);
      const newUser = await axios.post(`${API_URL}/users/register`, values);

      message.success("üéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!");

      queryClient.setQueryData(["users", queryData], (oldData) => {
        if (!oldData) return oldData;
        return [...oldData, newUser.data.user];
      });

      onClose();
      form.resetFields(); // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏:", error);
      message.error(
        `–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏: ${
          error.response?.data?.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"
        }`
      );
    } finally {
      setLoading(false);
      console.log("üîΩ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è.");
    }
  };

  return (
    <Modal
      open={open}
      onCancel={onClose}
      title="–°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
      footer={null}
      maskClosable={false}
    >
      <Form form={form} layout="vertical" onFinish={handleSubmit}>
        <Row gutter={16}>
          <Col span={24}>
            <Form.Item
              name="name"
              label="–§–ò–û"
              rules={[{ required: true, message: "–í–≤–µ–¥–∏—Ç–µ –§–ò–û" }]}
            >
              <Input />
            </Form.Item>
          </Col>
        </Row>
        <Row gutter={16}>
          <Col span={24}>
            <Form.Item
              name="userName"
              label="–ù–∏–∫"
              rules={[
                { required: true, message: "–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫" },
                {
                  pattern: /^[a-zA-Z0-9_-]+$/,
                  message:
                    "–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, _ –∏ - –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤",
                },
              ]}
            >
              <Input />
            </Form.Item>
          </Col>
        </Row>
        <Row gutter={16}>
          <Col span={24}>
            <Form.Item
              name="roles"
              label="–†–æ–ª–∏"
              rules={[{ required: true, message: "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å" }]}
            >
              <Select
                mode="multiple"
                options={[
                  { value: "admin", label: "–ê–¥–º–∏–Ω" },
                  { value: "manager", label: "–ú–µ–Ω–µ–¥–∂–µ—Ä" },
                ]}
                min={0}
                style={{ width: "100%" }}
              />
            </Form.Item>
          </Col>
        </Row>

        <div style={{ display: "flex", gap: 10 }}>
          <Button type="primary" htmlType="submit" loading={loading}>
            –°–æ–∑–¥–∞—Ç—å
          </Button>
          <Button type="default" danger onClick={onClose}>
            –ó–∞–∫—Ä—ã—Ç—å
          </Button>
        </div>
      </Form>
    </Modal>
  );
};

export default CreateUserModal;
