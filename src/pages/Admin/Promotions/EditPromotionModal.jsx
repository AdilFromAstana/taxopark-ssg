/* eslint-disable react/prop-types */
import {
  Modal,
  Form,
  Input,
  Button,
  DatePicker,
  Select,
  Radio,
  Row,
  Col,
  message,
} from "antd";
import axios from "axios";
import { useEffect, useState } from "react";
import moment from "moment";

const API_URL = import.meta.env.VITE_API_URL;

const EditPromotionModal = ({ open, onClose, record, parks }) => {
  const [form] = Form.useForm();
  const [loading, setLoading] = useState(false);
  const [isEditMode, setIsEditMode] = useState(false);

  useEffect(() => {
    if (record) {
      form.setFieldsValue({
        title: record.title,
        parkId: record.parkId,
        description: record.description,
        expires: record.expires ? moment(record.expires) : null,
        active: record.active,
      });
    }
  }, [record, form]);

  const handleCancel = () => {
    setIsEditMode(false);
    form.setFieldsValue({
      title: record.title,
      parkId: record.parkId,
      description: record.description,
      expires: record.expires ? moment(record.expires) : null,
      active: record.active,
    });
  };

  const handleUpdate = async () => {
    const data = form.getFieldsValue();
    try {
      setLoading(true);
      console.log("üîÑ –ù–∞—á–∞–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...");

      // let imageUrl = record.imageUrl;

      // if (fileList.length > 0 && fileList[0].originFileObj) {
      //   console.log("üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞...");
      // const formData = new FormData();
      // formData.append("file", fileList[0].originFileObj);

      // const uploadResponse = await axios.post(`${API_URL}/upload`, formData);
      // imageUrl = uploadResponse?.data?.url;

      // console.log("‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω:", imageUrl);
      // }

      console.log("üì° –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...");
      const response = await axios.put(`${API_URL}/promotions/${record.id}`, {
        ...data,
        // imageUrl,
      });

      console.log("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.data);
      message.success("üéâ –ü—Ä–æ–º–æ-–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!");

      setIsEditMode(false);
      onClose();
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏:", error);
      message.error(
        `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞–∫—Ü–∏–∏: ${
          error.response?.data?.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"
        }`
      );
    } finally {
      setLoading(false);
      console.log("üîΩ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.");
    }
  };

  return (
    <Modal
      open={open}
      onCancel={onClose}
      title={isEditMode ? "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ-–∞–∫—Ü–∏—é" : "–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–º–æ-–∞–∫—Ü–∏–∏"}
      footer={null}
      width="50vw"
      maskClosable={false}
    >
      <Form form={form} layout="vertical" onFinish={handleUpdate}>
        <Row gutter={16}>
          <Col span={12}>
            <Form.Item
              name="title"
              label="–ù–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ü–∏–∏"
              rules={[{ required: true, message: "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ" }]}
            >
              <Input disabled={!isEditMode} />
            </Form.Item>
          </Col>
          <Col span={12}>
            <Form.Item
              name="parkId"
              label="–¢–∞–∫—Å–æ–ø–∞—Ä–∫"
              rules={[{ required: true, message: "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–∫—Å–æ–ø–∞—Ä–∫" }]}
            >
              <Select disabled={!isEditMode} placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–∫—Å–æ–ø–∞—Ä–∫">
                {parks.map((park) => (
                  <Select.Option key={park.id} value={park.id}>
                    {park.title}
                  </Select.Option>
                ))}
              </Select>
            </Form.Item>
          </Col>
        </Row>

        <Row gutter={16}>
          <Col span={24}>
            <Form.Item
              name="description"
              label="–û–ø–∏—Å–∞–Ω–∏–µ"
              rules={[{ required: true, message: "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ" }]}
            >
              <Input.TextArea rows={4} disabled={!isEditMode} />
            </Form.Item>
          </Col>
        </Row>

        <Row gutter={16}>
          <Col span={12}>
            <Form.Item name="expires" label="–î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è">
              <DatePicker
                format="DD.MM.YYYY"
                style={{ width: "100%" }}
                disabled={!isEditMode}
              />
            </Form.Item>
          </Col>
          <Col span={12}>
            <Form.Item name="active" label="–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å">
              <Radio.Group disabled={!isEditMode}>
                <Radio value={true}>–ê–∫—Ç–∏–≤–Ω–æ</Radio>
                <Radio value={false}>–ù–µ–∞–∫—Ç–∏–≤–Ω–æ</Radio>
              </Radio.Group>
            </Form.Item>
          </Col>
        </Row>

        {/* <Row gutter={16}>
          <Col span={24}>
            <Form.Item name="imageUrl" label="–ó–∞–º–µ–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ">
              <Upload
                fileList={fileList}
                beforeUpload={() => false}
                onChange={({ fileList }) => setFileList(fileList)}
                maxCount={1}
                disabled={!isEditMode}
              >
                <Button icon={<UploadOutlined />} disabled={!isEditMode}>
                  –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
                </Button>
              </Upload>
            </Form.Item>
          </Col>
        </Row> */}

        <div style={{ display: "flex", gap: 10 }}>
          {isEditMode ? (
            <>
              <Button type="primary" onClick={handleUpdate} loading={loading}>
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
              </Button>
              <Button type="default" onClick={handleCancel}>
                –û—Ç–º–µ–Ω–∞
              </Button>
            </>
          ) : (
            <>
              <Button type="primary" onClick={() => setIsEditMode(true)}>
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </Button>
              <Button type="default" danger onClick={onClose}>
                –ó–∞–∫—Ä—ã—Ç—å
              </Button>
            </>
          )}
        </div>
      </Form>
    </Modal>
  );
};

export default EditPromotionModal;
